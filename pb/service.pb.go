// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/oliverkra/gqm/pb/service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Message struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Sequence             uint64   `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_838d429ae6e230c8, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Message) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Message) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PublishRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishRequest) Reset()         { *m = PublishRequest{} }
func (m *PublishRequest) String() string { return proto.CompactTextString(m) }
func (*PublishRequest) ProtoMessage()    {}
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_838d429ae6e230c8, []int{1}
}

func (m *PublishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishRequest.Unmarshal(m, b)
}
func (m *PublishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishRequest.Marshal(b, m, deterministic)
}
func (m *PublishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishRequest.Merge(m, src)
}
func (m *PublishRequest) XXX_Size() int {
	return xxx_messageInfo_PublishRequest.Size(m)
}
func (m *PublishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishRequest proto.InternalMessageInfo

func (m *PublishRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PublishRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type PublishResponse struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishResponse) Reset()         { *m = PublishResponse{} }
func (m *PublishResponse) String() string { return proto.CompactTextString(m) }
func (*PublishResponse) ProtoMessage()    {}
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_838d429ae6e230c8, []int{2}
}

func (m *PublishResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishResponse.Unmarshal(m, b)
}
func (m *PublishResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishResponse.Marshal(b, m, deterministic)
}
func (m *PublishResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishResponse.Merge(m, src)
}
func (m *PublishResponse) XXX_Size() int {
	return xxx_messageInfo_PublishResponse.Size(m)
}
func (m *PublishResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishResponse proto.InternalMessageInfo

func (m *PublishResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type SubscribeRequest struct {
	// Types that are valid to be assigned to Command:
	//	*SubscribeRequest_Subscribe
	//	*SubscribeRequest_Close
	Command              isSubscribeRequest_Command `protobuf_oneof:"command"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_838d429ae6e230c8, []int{3}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

type isSubscribeRequest_Command interface {
	isSubscribeRequest_Command()
}

type SubscribeRequest_Subscribe struct {
	Subscribe *SubscribeRequest_SubscribeCommand `protobuf:"bytes,1,opt,name=subscribe,proto3,oneof"`
}

type SubscribeRequest_Close struct {
	Close *SubscribeRequest_CloseCommand `protobuf:"bytes,2,opt,name=close,proto3,oneof"`
}

func (*SubscribeRequest_Subscribe) isSubscribeRequest_Command() {}

func (*SubscribeRequest_Close) isSubscribeRequest_Command() {}

func (m *SubscribeRequest) GetCommand() isSubscribeRequest_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *SubscribeRequest) GetSubscribe() *SubscribeRequest_SubscribeCommand {
	if x, ok := m.GetCommand().(*SubscribeRequest_Subscribe); ok {
		return x.Subscribe
	}
	return nil
}

func (m *SubscribeRequest) GetClose() *SubscribeRequest_CloseCommand {
	if x, ok := m.GetCommand().(*SubscribeRequest_Close); ok {
		return x.Close
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SubscribeRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SubscribeRequest_Subscribe)(nil),
		(*SubscribeRequest_Close)(nil),
	}
}

type SubscribeRequest_SubscribeCommand struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest_SubscribeCommand) Reset()         { *m = SubscribeRequest_SubscribeCommand{} }
func (m *SubscribeRequest_SubscribeCommand) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest_SubscribeCommand) ProtoMessage()    {}
func (*SubscribeRequest_SubscribeCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_838d429ae6e230c8, []int{3, 0}
}

func (m *SubscribeRequest_SubscribeCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest_SubscribeCommand.Unmarshal(m, b)
}
func (m *SubscribeRequest_SubscribeCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest_SubscribeCommand.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest_SubscribeCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest_SubscribeCommand.Merge(m, src)
}
func (m *SubscribeRequest_SubscribeCommand) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest_SubscribeCommand.Size(m)
}
func (m *SubscribeRequest_SubscribeCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest_SubscribeCommand.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest_SubscribeCommand proto.InternalMessageInfo

func (m *SubscribeRequest_SubscribeCommand) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type SubscribeRequest_CloseCommand struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest_CloseCommand) Reset()         { *m = SubscribeRequest_CloseCommand{} }
func (m *SubscribeRequest_CloseCommand) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest_CloseCommand) ProtoMessage()    {}
func (*SubscribeRequest_CloseCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_838d429ae6e230c8, []int{3, 1}
}

func (m *SubscribeRequest_CloseCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest_CloseCommand.Unmarshal(m, b)
}
func (m *SubscribeRequest_CloseCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest_CloseCommand.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest_CloseCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest_CloseCommand.Merge(m, src)
}
func (m *SubscribeRequest_CloseCommand) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest_CloseCommand.Size(m)
}
func (m *SubscribeRequest_CloseCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest_CloseCommand.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest_CloseCommand proto.InternalMessageInfo

type SubscribeResponse struct {
	// Types that are valid to be assigned to Response:
	//	*SubscribeResponse_Message
	Response             isSubscribeResponse_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_838d429ae6e230c8, []int{4}
}

func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(m, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

type isSubscribeResponse_Response interface {
	isSubscribeResponse_Response()
}

type SubscribeResponse_Message struct {
	Message *Message `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

func (*SubscribeResponse_Message) isSubscribeResponse_Response() {}

func (m *SubscribeResponse) GetResponse() isSubscribeResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *SubscribeResponse) GetMessage() *Message {
	if x, ok := m.GetResponse().(*SubscribeResponse_Message); ok {
		return x.Message
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SubscribeResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SubscribeResponse_Message)(nil),
	}
}

func init() {
	proto.RegisterType((*Message)(nil), "gqm.Message")
	proto.RegisterType((*PublishRequest)(nil), "gqm.PublishRequest")
	proto.RegisterType((*PublishResponse)(nil), "gqm.PublishResponse")
	proto.RegisterType((*SubscribeRequest)(nil), "gqm.SubscribeRequest")
	proto.RegisterType((*SubscribeRequest_SubscribeCommand)(nil), "gqm.SubscribeRequest.SubscribeCommand")
	proto.RegisterType((*SubscribeRequest_CloseCommand)(nil), "gqm.SubscribeRequest.CloseCommand")
	proto.RegisterType((*SubscribeResponse)(nil), "gqm.SubscribeResponse")
}

func init() {
	proto.RegisterFile("github.com/oliverkra/gqm/pb/service.proto", fileDescriptor_838d429ae6e230c8)
}

var fileDescriptor_838d429ae6e230c8 = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xc1, 0x6e, 0x9b, 0x40,
	0x10, 0xf5, 0xd6, 0x76, 0x31, 0x63, 0xe4, 0xb6, 0x5b, 0xb7, 0x42, 0x1c, 0x2a, 0x84, 0xd4, 0x8a,
	0x5e, 0xa0, 0x72, 0xa5, 0x1c, 0x92, 0x8b, 0x65, 0x4b, 0x91, 0x73, 0x88, 0x94, 0xe0, 0x5b, 0x6e,
	0xb0, 0xac, 0x30, 0x0a, 0x78, 0x81, 0x65, 0x2d, 0xe5, 0x0f, 0xf2, 0x8f, 0xf9, 0x99, 0xc8, 0x0b,
	0x18, 0x6c, 0xa1, 0xdc, 0x66, 0xde, 0xce, 0x7b, 0xf3, 0x76, 0x66, 0xe0, 0x6f, 0x14, 0x97, 0x3b,
	0x11, 0x38, 0x84, 0xa5, 0x2e, 0x4b, 0xe2, 0x03, 0x2d, 0x9e, 0x0b, 0xdf, 0x8d, 0xf2, 0xd4, 0xcd,
	0x02, 0x97, 0xd3, 0xe2, 0x10, 0x13, 0xea, 0x64, 0x05, 0x2b, 0x19, 0x1e, 0x46, 0x79, 0x6a, 0x11,
	0x50, 0xee, 0x29, 0xe7, 0x7e, 0x44, 0x31, 0x86, 0x91, 0x10, 0x71, 0xa8, 0x23, 0x13, 0xd9, 0xaa,
	0x27, 0x63, 0x3c, 0x87, 0x71, 0xc9, 0xb2, 0x98, 0xe8, 0x9f, 0x24, 0x58, 0x25, 0xd8, 0x80, 0x09,
	0xa7, 0xb9, 0xa0, 0x7b, 0x42, 0xf5, 0xa1, 0x89, 0xec, 0x91, 0x77, 0xca, 0x8f, 0x2a, 0xa1, 0x5f,
	0xfa, 0xfa, 0xc8, 0x44, 0xb6, 0xe6, 0xc9, 0xd8, 0x5a, 0xc2, 0xec, 0x41, 0x04, 0x49, 0xcc, 0x77,
	0xde, 0xb1, 0x8c, 0x97, 0xad, 0x2e, 0xea, 0xea, 0xea, 0xa0, 0x64, 0xfe, 0x4b, 0xc2, 0xfc, 0x50,
	0xf6, 0xd3, 0xbc, 0x26, 0xb5, 0x7e, 0xc3, 0x97, 0x93, 0x02, 0xcf, 0xd8, 0x9e, 0xf7, 0xda, 0xb5,
	0xde, 0x10, 0x7c, 0xdd, 0x8a, 0x80, 0x93, 0x22, 0x0e, 0x68, 0xd3, 0xeb, 0x16, 0x54, 0xde, 0x60,
	0xb2, 0x7a, 0xba, 0xf8, 0xe3, 0x44, 0x79, 0xea, 0x5c, 0x56, 0xb6, 0xc0, 0x9a, 0xa5, 0xa9, 0xbf,
	0x0f, 0x37, 0x03, 0xaf, 0xa5, 0xe2, 0x6b, 0x18, 0x93, 0x84, 0x71, 0x2a, 0xbd, 0x4d, 0x17, 0x56,
	0xbf, 0xc6, 0xfa, 0x58, 0xd2, 0xf2, 0x2b, 0x8a, 0x61, 0x77, 0x7c, 0xd5, 0x8f, 0xfd, 0x33, 0x30,
	0x66, 0xa0, 0x75, 0x25, 0x56, 0x2a, 0x28, 0xa4, 0x0a, 0xad, 0x3b, 0xf8, 0xd6, 0x69, 0x57, 0x8f,
	0xc1, 0x06, 0x25, 0xad, 0x16, 0x58, 0xff, 0x4d, 0x93, 0xbe, 0xea, 0xa5, 0x6e, 0x06, 0x5e, 0xf3,
	0xbc, 0x02, 0x98, 0x14, 0x35, 0x6b, 0xf1, 0x8a, 0x40, 0x7b, 0x14, 0x54, 0xd0, 0x6d, 0x75, 0x12,
	0xf8, 0x0a, 0x94, 0x7a, 0xc0, 0xf8, 0xbb, 0x14, 0x38, 0x5f, 0x98, 0x31, 0x3f, 0x07, 0x2b, 0x19,
	0x6b, 0x80, 0x97, 0xa0, 0x9e, 0x3c, 0xe1, 0x1f, 0xbd, 0x23, 0x31, 0x7e, 0x5e, 0xc2, 0x0d, 0xdb,
	0x46, 0xff, 0xd0, 0xca, 0x7c, 0xfa, 0xf5, 0xc1, 0xcd, 0xde, 0x64, 0x41, 0xf0, 0x59, 0xde, 0xeb,
	0xff, 0xf7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdd, 0xbb, 0x9a, 0x9c, 0xdc, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueueServiceClient is the client API for QueueService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueueServiceClient interface {
	Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error)
	Subscribe(ctx context.Context, opts ...grpc.CallOption) (QueueService_SubscribeClient, error)
}

type queueServiceClient struct {
	cc *grpc.ClientConn
}

func NewQueueServiceClient(cc *grpc.ClientConn) QueueServiceClient {
	return &queueServiceClient{cc}
}

func (c *queueServiceClient) Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := c.cc.Invoke(ctx, "/gqm.QueueService/Publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueServiceClient) Subscribe(ctx context.Context, opts ...grpc.CallOption) (QueueService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QueueService_serviceDesc.Streams[0], "/gqm.QueueService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &queueServiceSubscribeClient{stream}
	return x, nil
}

type QueueService_SubscribeClient interface {
	Send(*SubscribeRequest) error
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type queueServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *queueServiceSubscribeClient) Send(m *SubscribeRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *queueServiceSubscribeClient) Recv() (*SubscribeResponse, error) {
	m := new(SubscribeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// QueueServiceServer is the server API for QueueService service.
type QueueServiceServer interface {
	Publish(context.Context, *PublishRequest) (*PublishResponse, error)
	Subscribe(QueueService_SubscribeServer) error
}

func RegisterQueueServiceServer(s *grpc.Server, srv QueueServiceServer) {
	s.RegisterService(&_QueueService_serviceDesc, srv)
}

func _QueueService_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gqm.QueueService/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).Publish(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(QueueServiceServer).Subscribe(&queueServiceSubscribeServer{stream})
}

type QueueService_SubscribeServer interface {
	Send(*SubscribeResponse) error
	Recv() (*SubscribeRequest, error)
	grpc.ServerStream
}

type queueServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *queueServiceSubscribeServer) Send(m *SubscribeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *queueServiceSubscribeServer) Recv() (*SubscribeRequest, error) {
	m := new(SubscribeRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _QueueService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gqm.QueueService",
	HandlerType: (*QueueServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Publish",
			Handler:    _QueueService_Publish_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _QueueService_Subscribe_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "github.com/oliverkra/gqm/pb/service.proto",
}
